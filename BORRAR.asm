extern _printf
extern _malloc
extern _free


section .text
global _borrar_abb

section .data

;TRABAJAMOS EN IA32, LOS PARAMETROS VAN POR PILA, VALOR DE DEVOLUCIÓN DE LA FUNCIÓN VA EN EAX!
;TAMAÑOS DE LOS VALORES: PUNTERO 4 BYTES

_borrar_abb: 

;ARMO CONTEXTO
	PUSH EBP
	MOV EBP, ESP

	;AGARRO EL PUNTERO
	MOV ESI,[EBP+8]	  	;0 INICIO EBP + 4 BYTES DEL EIP + 4 BYTES DEL EBP = 8 BYTES
	
	;ME FIJO SI EL NODO ES NULO, SI LO ES SALGO PORQUE YA BORRE TODOS LOS NODOS!
	CMP ESI, 0 ;
	JNE BORRAR
	
	;SALGO
	MOV ESP, EBP
	POP EBP
	RET

BORRAR:
	;HAGO LAS LLAMADAS RECURSIVAS!
	PUSH ESI	;PUSHEO EL PUNTERO ACTUAL
	MOV ECX, [ESI+4]
	PUSH ECX ;MANDO POR PARAMETRO AL PUNTERO AL NODO IZQUIERDO
	CALL _borrar_abb
	ADD ESP, 4
	POP ESI 	;RECUPERO EL PUNTERO ACTUAL

	
	PUSH ESI	;PUSHEO EL PUNTERO ACTUAL
	MOV ECX, [ESI+8]
	PUSH ECX ;MANDO POR PARAMETRO AL PUNTERO AL NODO DERECHO
	CALL _borrar_abb
	ADD ESP, 4
	POP ESI
	
	PUSH ESI			;PUSHEO EL VALOR DEL PUNTERO PARA LIBERARLO - CONVENCIÓN DE 32 BITS -
	CALL _free			;LIBERO AL PUNTERO! :)
	POP ESI				;LIMPIO LA PILA!
	
	mov dword[EBP+8], 0		;LA MEMORIA SE LIBERO, ENTONCES AHORA ANULO EL PUNTERO
	mov esi, 0

	;SALGO
	MOV ESP, EBP
	POP EBP
	RET